
pipeline{

agent any

tools{
maven "maveen3.8.5"
}

triggers {
  pollSCM '* * * * *'
}

options {

//discard old bills keep only 5 artifacts
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
//adding the timestamps
timestamps()
}


stages{

//checkoutcode
stage('checkoutcode'){
steps{
  git branch: 'development', credentialsId: '2560b4a0-18f2-4508-b750-7847d966f1c7', url: 'https://github.com/manjushreenaveen/maven-web-application.git' 
}
}
//build stage
stage('build'){
steps{
sh "mvn clean package"
}
}

//ececute sonar qube report stage
stage('execute sonar qubereport'){
steps{
sh "mvn sonar:sonar"
}
}

//upload artifacts into artifactory repo stage
stage('upload into nexus'){
steps{
sh "mvn deploy"
}
}

stage('deployment into tomcat'){
    steps{
    	 sshagent(['4bf591aa-c145-4761-bcaa-2de44ce0e7ae']) {
	 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.46.210:/opt/apache-tomcat-9.0.63/webapps"
    }
}
}
}//stages closing

post {
  success {
      sendSlackNotifications('SUCCESS')
    
  }
  failure {
      sendSlackNotifications('FAILURE')
    
  }
}

}//pipeline closing

//Belode code will use for send slack build notifications

def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}


